package com.zervladpy;

import java.util.Random;

/**
 * We want to create a multithreading application.
 * 
 * The main thread must generate a random number (use java.util.Random) between
 * 0 and 100. That main thread must create ten threads whose job is to guess the
 * number generated by the main thread.
 * 
 * To perform their tasks all threads must share an object of the HiddenNumber
 * class. The HiddenNumber class must have a method int numberGuess(int num)
 * that has to return the following values:
 * 
 * -1 if the game is over because one thread has guessed the number
 * 1 if the proposed number (num) is the hidden number
 * 0 otherwise
 * Follow the given specifications to create the application.
 *
 */
public class Guesser {

    final static int N_THREADS = 10;
    final static int MIN_VALUE = 0;
    final static int MAX_VALUE = 100;

    public static void main(String[] args) {

        final HiddenNumber hiddenNumber = new HiddenNumber(MIN_VALUE, MAX_VALUE);

        final Random random = new Random();

        for (int i = 0; i < N_THREADS; i++) {

            Thread thread = new Thread() {
                @Override
                public void run() {

                    boolean isGuessCorrect = false;

                    while (!isGuessCorrect) {

                        int guess = random.nextInt(MIN_VALUE, MAX_VALUE);

                        int guessResult = hiddenNumber.numberGuess(guess);

                        if (guessResult == 1) {
                            isGuessCorrect = true;
                            System.out
                                    .println("Guess is correct on thread: " + this.getName() + " with value: " + guess);
                        } else if (guessResult == -1) {
                            break;
                        }
                    }
                }
            };

            thread.start();
        }

    }
}
